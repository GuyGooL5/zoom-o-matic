{"version":3,"sources":["stores/GlobalStore.tsx","config.ts","utils/moodleRequests.ts","actions/localStorageActions.ts","ContextProviders/AlertContext.tsx","components/LoginPage/AcademyUrl.tsx","ContextProviders/SnackbarContext.tsx","hooks/useError.tsx","components/LoginPage/Login.tsx","components/LoginPage/index.tsx","components/ScanDialog/SelectCourse.tsx","components/ScanDialog/SelectActivity.tsx","components/ScanDialog/index.tsx","components/CoursesPage/ActivityCards.tsx","components/CoursesPage/ZoomFrame.tsx","components/CoursesPage/ZoomDialog.tsx","components/CoursesPage/index.tsx","components/HomePage/NavbarDrawer.tsx","components/HomePage/Navbar.tsx","components/HomePage/Home.tsx","components/HomePage/index.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["initialState","token","localStorage","getItem","moodleUrl","user","v","JSON","parse","toolids","reducer","state","type","payload","newState","k","Context","createContext","GlobalStore","children","useReducer","dispatch","Provider","value","useGlobalStore","useContext","Axios","axios","create","headers","pick","obj","ret","Object","paths","apiCall","service","body","Promise","resolve","reject","post","URLSearchParams","toString","then","data","errorcode","error","fetchUser","fetchLti","toolid","parameters","newParams","name","setToken","setItem","removeItem","setUser","stringify","setMoodleUrl","url","AlertContext","React","props","Alert","open","content","title","button","onClose","Dialog","dir","DialogTitle","DialogContent","DialogActions","Button","variant","color","onClick","e","text","useAlert","AlertContextProvider","useState","setProps","AcademyUrl","setUrl","loading","setLoading","dispatchGlobalStore","openAlert","tryUrl","URL","join","method","status","catch","updateURL","a","preventDefault","tempUrl","startsWith","href","origin","Error","Container","maxWidth","style","marginTop","Grid","container","spacing","direction","item","xs","Typography","TextField","fullWidth","label","required","onChange","target","disabled","MessageSnackBar","persist","message","backgroundColor","textColor","duration","handleClose","r","action","marginRight","marginLeft","paddingRight","eventHandler","Snackbar","autoHideDuration","SnackbarContext","useSnackbar","SnackbarContextProvider","setOpen","useEffect","Date","useError","openSnackbar","onInvalidToken","useCallback","requestError","Login","passwordVisible","setPasswordVisible","tosChecked","setTosChecked","username","password","creds","setCreds","InputProps","endAdornment","IconButton","Visibility","VisibilityOff","Paper","paddingLeft","justify","alignItems","Edit","Link","Checkbox","checked","finally","startIcon","CircularProgress","size","LoginPage","dispatchLocalStorage","SelectCourse","onSelectCourse","courses","setCourses","length","userid","map","entry","fetchCourses","List","course","index","ListItem","ListItemText","textAlign","fullname","ActivityItem","onSelect","lti","setLti","ready","setReady","resource_link_title","ActivitiesList","onFinish","selectedToolids","dispatchGlobal","handleSelect","console","log","resource_link_id","includes","setToolids","SelectActivity","selectedCourse","selectToolids","setSelectToolids","id","ltis","ScanDialog","step","setStep","setTitle","setSelectedCourse","theme","useTheme","steps","onExited","breakpoints","width","ActivityCard","editMode","onDelete","handleDelete","filtered","filter","deleteToolid","ListItemIcon","Delete","context_title","ActivityCards","onFinishedEditing","onSelectLti","cards","useMemo","Divider","Add","ZoomFrame","iframeRef","useRef","formRef","current","submit","src","ref","height","display","endpoint","encType","entries","Transition","forwardRef","Slide","ZoomDialog","onCloseDialog","fullScreen","TransitionComponent","AppBar","position","Toolbar","edge","Close","CoursesPage","setEditMode","scanDialogBreakpoint","useMediaQuery","down","zoomDialogOpen","setZoomOpenDialog","scanDialogOpen","setScanDialogOpen","sm","last","DrawerListItem","icon","primary","NavbarDrawer","Drawer","anchor","PaperProps","Info","clear","Navbar","aria-label","Menu","flexGrow","Home","HomePage","App","className","margin","padding","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fa5617b1.chunk.js","sourcesContent":["import React, { createContext, Dispatch, useContext, useReducer } from \"react\"\r\nimport { IUserData } from \"../interfaces\"\r\nimport { DispatchActions } from \"../types\";\r\n\r\ninterface GlobalStoreData {\r\n    user: IUserData | null;\r\n    token: string | null;\r\n    toolids: string[] | null;\r\n    moodleUrl: string | null;\r\n}\r\n\r\nconst initialState: GlobalStoreData = {\r\n    token: localStorage.getItem(\"token\"),\r\n    moodleUrl: localStorage.getItem(\"moodleUrl\"),\r\n    user: (() => { let v = localStorage.getItem(\"user\"); return v ? JSON.parse(v) : null })(),\r\n    toolids: (() => { let v = localStorage.getItem(\"toolids\"); return v ? JSON.parse(v) : null })()\r\n}\r\n\r\n\r\ntype Actions = {\r\n    SET_TOKEN: string | null,\r\n    SET_USER: IUserData | null,\r\n    SET_MD_URL: string | null,\r\n    SET_TOOLIDS: string[] | null,\r\n    RESET_STORAGE: boolean\r\n}\r\n\r\n\r\nexport type GlobalStoreActions = DispatchActions<Actions>;\r\n\r\nconst reducer = (state: GlobalStoreData, { type, payload }: GlobalStoreActions) => {\r\n\r\n    switch (type) {\r\n        /**if payload is present the token will be set to be the payload, otherwise it will be deleted */\r\n        case \"SET_TOKEN\": return { ...state, token: payload as string | null };\r\n        case \"SET_USER\": return { ...state, user: payload as IUserData | null };\r\n        case \"SET_MD_URL\": return { ...state, moodleUrl: payload as string | null };\r\n        case \"SET_TOOLIDS\": return { ...state, toolids: payload as string[] | null };\r\n        case \"RESET_STORAGE\":\r\n            const newState = { ...state };\r\n            for (const k in newState) {\r\n                newState[k as keyof GlobalStoreData] = null;\r\n            }\r\n            return newState\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nconst Context = createContext({});\r\n\r\nconst GlobalStore: React.FC = ({ children }) => {\r\n\r\n    const [state, dispatch] = useReducer(reducer, initialState);\r\n\r\n    return <Context.Provider value={[state, dispatch]}>\r\n        {children}\r\n    </Context.Provider>;\r\n}\r\n\r\n\r\nconst useGlobalStore = () => useContext(Context) as [GlobalStoreData, Dispatch<DispatchActions<Actions>>];\r\n\r\n\r\nexport {\r\n    GlobalStore,\r\n    useGlobalStore\r\n}","import axios from 'axios'\r\n\r\nexport const Axios = axios.create({\r\n    headers: {\r\n        \"Content-Type\": \"application/x-www-form-urlencoded\",\r\n        \"Accept\": \"application/json, text/plain, */*\"\r\n    }\r\n});","import { Axios } from \"../config\";\r\nimport { ICourseData, IUserData, LTI } from \"../interfaces\";\r\n\r\nfunction pick<T extends object, U extends keyof T>(obj: T, ...paths: U[]): Pick<T, U> {\r\n    const ret = Object.create(null);\r\n    for (const k of paths)\r\n        ret[k] = obj[k];\r\n    return ret;\r\n}\r\n\r\n\r\n\r\n\r\nconst apiCall = (service: string, ...body: [string, string][]): Promise<any> => new Promise((resolve, reject) => {\r\n    const token = localStorage.getItem('token');\r\n    const moodleUrl = localStorage.getItem('moodleUrl');\r\n\r\n    if (!token || !moodleUrl) reject({ errorcode: 'missingtoken', error: 'טוקן לא קיים' });\r\n\r\n    else Axios.post(`${moodleUrl}/webservice/rest/server.php?moodlewsrestformat=json&wsfunction=${service}`,\r\n        new URLSearchParams([['wsfunction', service], ['wstoken', token as string], ...body]).toString()\r\n    ).then(({ data }) => {\r\n        if (!data) reject({ errorcode: 'jsonerror', error: \"שגיאה בעת קבלת המידע מהשרת\" })\r\n        else if (data?.errorcode) reject(data);\r\n        else resolve(data);\r\n    });\r\n});\r\n\r\n/**\r\n * request to get the user information from moodle api.\r\n * @async\r\n */\r\nconst fetchUser = (): Promise<IUserData> => apiCall(\"core_webservice_get_site_info\")\r\n    .then(data => (pick(data,\r\n        \"firstname\",\r\n        \"lastname\",\r\n        \"fullname\",\r\n        \"username\",\r\n        \"userid\",\r\n        \"userprivateaccesskey\",\r\n        \"userpictureurl\")));\r\n\r\nconst fetchCourses = (): Promise<ICourseData[]> => {\r\n    const user: IUserData = JSON.parse(localStorage.getItem('user') ?? \"\");\r\n\r\n    if (!user?.userid) return Promise.reject({ errorcode: 'nouser', error: \"לא נמצאו פרטי המשתמש, אנא נסו להתחבר שוב\" });\r\n\r\n    return apiCall('core_enrol_get_users_courses', ['userid', user.userid])\r\n        .then(data => (data.map((entry: any) => pick(entry,\r\n            \"id\",\r\n            \"idnumber\",\r\n            \"fullname\",\r\n            \"shortname\",\r\n            \"displayname\"))\r\n        ));\r\n}\r\n/**\r\n * Returns an array of activities' id.\r\n * @param course course id \r\n */\r\nconst fetchToolids = (course: string): Promise<string[]> => apiCall('mod_lti_get_ltis_by_courses', ['courseids[0]', course]).then(data => {\r\n    const { ltis } = data;\r\n    if (ltis) return (ltis.map((entry: any) => entry.id));\r\n    //TODO: fix rejection of missing toolid\r\n    else Promise.reject({ errorcode: 'missingtoolid', error: 'missing toolid error' });\r\n})\r\n\r\n/**\r\n * Returns an LTI object representing the given toolid\r\n * @param toolid - the activity's id\r\n */\r\nconst fetchLti = (toolid: string): Promise<LTI> => apiCall('mod_lti_get_tool_launch_data', ['toolid', toolid]).then(data => {\r\n    if (data.parameters as { name: string, value: string }[]) {\r\n        const newParams: Record<string, string> = {};\r\n        for (const { name, value } of data.parameters) newParams[name] = value;\r\n        data.parameters = newParams;\r\n        return (data);\r\n    }\r\n    //TODO: fix the rejection of get LTI\r\n    else Promise.reject({ errorcode: 'missinglti', error: 'missinglti' });\r\n})\r\n\r\nexport {\r\n    fetchCourses, fetchLti, fetchToolids, fetchUser\r\n}","import { Dispatch } from \"react\";\r\nimport { IUserData } from \"../interfaces\";\r\nimport { GlobalStoreActions } from \"../stores/GlobalStore\";\r\n\r\n\r\n\r\nconst setToken = (token: string | null) => (dispatch: Dispatch<GlobalStoreActions>) => {\r\n    if (token) localStorage.setItem('token', token);\r\n    else localStorage.removeItem('token');\r\n    return dispatch({ type: \"SET_TOKEN\", payload: token })\r\n}\r\n\r\nconst setUser = (user: IUserData | null) => (dispatch: Dispatch<GlobalStoreActions>) => {\r\n    if (user) localStorage.setItem(\"user\", JSON.stringify(user));\r\n    else localStorage.removeItem(\"user\");\r\n    dispatch({ type: \"SET_USER\", payload: user });\r\n}\r\nconst setMoodleUrl = (url: string | null) => (dispatch: Dispatch<GlobalStoreActions>) => {\r\n    if (url) localStorage.setItem(\"moodleUrl\", url);\r\n    else localStorage.removeItem(\"moodleUrl\");\r\n    dispatch({ type: \"SET_MD_URL\", payload: url });\r\n}\r\n\r\nconst setToolids = (toolids: string[]) => (dispatch: Dispatch<GlobalStoreActions>) => {\r\n    localStorage.setItem(\"toolids\", JSON.stringify(toolids));\r\n    dispatch({ type: \"SET_TOOLIDS\", payload: toolids });\r\n}\r\n\r\nconst deleteToolid = (toolid: string) => (dispatch: Dispatch<GlobalStoreActions>) => {\r\n    const toolids: string[] = JSON.parse(localStorage.getItem(\"toolids\") ?? \"[]\");\r\n    const filtered = toolids.filter((value) => value !== toolid);\r\n    localStorage.setItem(\"toolids\", JSON.stringify(filtered));\r\n    dispatch({ type: \"SET_TOOLIDS\", payload: filtered });\r\n}\r\n\r\nconst clearLocalStorage = () => (dispatch: Dispatch<GlobalStoreActions>) => {\r\n    localStorage.clear();\r\n    dispatch({ type: \"RESET_STORAGE\", payload: true });\r\n}\r\n\r\n\r\nexport {\r\n    setToken,\r\n    setMoodleUrl,\r\n    setUser,\r\n    setToolids,\r\n    deleteToolid,\r\n    clearLocalStorage\r\n}","import { Button, ButtonProps, Dialog, DialogActions, DialogContent, DialogTitle } from '@material-ui/core';\r\nimport React, { MouseEventHandler, ReactNode, useContext, useState } from 'react'\r\n\r\ninterface AlertProps {\r\n    onClose?: () => void;\r\n    content: React.ReactNode;\r\n    title?: string;\r\n    button?: {\r\n        text: string;\r\n        props?: ButtonProps;\r\n    }\r\n}\r\n\r\n\r\ninterface AlertHiddenProps extends AlertProps {\r\n    open: boolean;\r\n    onClose: () => void;\r\n}\r\n\r\nconst AlertContext = React.createContext((props: AlertProps | null) => { (() => props)() });\r\n\r\n\r\nconst Alert = ({ open, content, title, button, onClose }: AlertHiddenProps) => {\r\n\r\n    const customButtonFn: MouseEventHandler<HTMLButtonElement> = (e) => {\r\n        if (button?.props?.onClick) button.props.onClick(e);\r\n        onClose();\r\n    }\r\n    return <Dialog dir=\"rtl\" open={open} onClose={onClose} >\r\n        {title ? <DialogTitle>{title}</DialogTitle> : null}\r\n        <DialogContent>{content}</DialogContent>\r\n        <DialogActions>\r\n            <Button variant=\"text\" color=\"primary\" {...button?.props} onClick={customButtonFn} >{button?.text ?? \"אוקיי\"}</Button>\r\n        </DialogActions>\r\n    </Dialog>\r\n};\r\n\r\nexport const useAlert = () => useContext(AlertContext);\r\n\r\nexport default function AlertContextProvider({ children }: { children?: ReactNode }) {\r\n\r\n    const [props, setProps] = useState<AlertProps | null>(null)\r\n\r\n    return <AlertContext.Provider value={setProps}>\r\n        {props ? <Alert {...props} open={!!props}\r\n            onClose={() => {\r\n                if (props.onClose) props.onClose();\r\n                setProps(null);\r\n            }}\r\n        /> : null}\r\n        {children}\r\n    </AlertContext.Provider >\r\n\r\n}\r\n\r\n\r\n","import { Button, Container, Grid, TextField, Typography } from '@material-ui/core';\r\nimport React, { MouseEventHandler, useState } from 'react'\r\nimport { join } from 'path'\r\nimport { useGlobalStore } from '../../stores/GlobalStore';\r\nimport { Axios } from '../../config';\r\nimport { setMoodleUrl } from '../../actions/localStorageActions';\r\nimport { useAlert } from '../../ContextProviders/AlertContext';\r\n\r\nexport default function AcademyUrl() {\r\n\r\n    const [url, setUrl] = useState(\"\")\r\n    const [loading, setLoading] = useState(false);\r\n    const [, dispatchGlobalStore] = useGlobalStore();\r\n    const openAlert = useAlert();\r\n    const tryUrl = (url: string): Promise<boolean> => {\r\n        return new Promise((resolve) => {\r\n            Axios.post(new URL(join(url, '/login/token.php')).toString(), {\r\n                method: 'POST',\r\n            }).then(({ status, data }) => {\r\n                if (status !== 200) resolve(false);\r\n                resolve(!!data?.errorcode);\r\n            }).catch(() => resolve(false))\r\n        })\r\n    }\r\n\r\n    const updateURL: MouseEventHandler<HTMLButtonElement> = async (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n        let tempUrl: URL;\r\n        try {\r\n            tempUrl = (!(url.startsWith('http://') || url.startsWith('https://'))) ?\r\n                new URL(`https://${url}`) :\r\n                new URL(url);\r\n\r\n            if (await tryUrl(tempUrl.href)) {\r\n                setMoodleUrl(tempUrl.toString())(dispatchGlobalStore);\r\n            }\r\n            else if (await tryUrl(tempUrl.origin)) {\r\n                setMoodleUrl(tempUrl.toString())(dispatchGlobalStore);\r\n            }\r\n            else throw Error();\r\n        } catch (e) {\r\n            openAlert({ title: \"אתר המודל לא נמצא\", content: \"לא ניתן להתחבר, אנא וודאו שהכתובת תקינה או שהחיבור תקין\" })\r\n            setLoading(false);\r\n        }\r\n    }\r\n\r\n    return <Container maxWidth=\"sm\" style={{ marginTop: 16 }}>\r\n        <form>\r\n            <Grid container spacing={2} direction=\"row-reverse\">\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h5\">אני הכנס/י את כתובת המודל של מוסד הלימודים שלך</Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField fullWidth label=\"Moodle URL\" required variant=\"filled\" value={url} onChange={(e) => setUrl(e.target.value)} />\r\n                </Grid>\r\n                <Grid item>\r\n                    <Button type=\"submit\" variant=\"contained\" color=\"primary\" disabled={!!loading} onClick={updateURL} >עדכון</Button>\r\n                </Grid>\r\n            </Grid>\r\n        </form>\r\n    </Container>\r\n}\r\n","import { Button, Snackbar, SnackbarOrigin, SnackbarProps } from '@material-ui/core';\r\nimport React, { MouseEventHandler, ReactNode, useContext, useEffect, useState } from 'react'\r\n\r\n\r\n\r\ninterface ISnackbarProps extends SnackbarProps {\r\n    persist?: boolean // if true clickaway won't dismiss the snackbar, only timeout.\r\n    duration?: number; //in milliseconds\r\n    anchorOrigin?: SnackbarOrigin;\r\n    backgroundColor?: string;\r\n    textColor?: string;\r\n    button?: { text: string, eventHandler?: MouseEventHandler<HTMLButtonElement>, color?: string; }\r\n}\r\n\r\n\r\n\r\nfunction MessageSnackBar({ open, onClose, persist, message, backgroundColor, textColor: color, duration, button, ...props }: ISnackbarProps) {\r\n\r\n\r\n    const handleClose: SnackbarProps[\"onClose\"] = (e, r) => {\r\n        if (persist && r === \"clickaway\") return;\r\n        if (onClose) onClose(e, r);\r\n    }\r\n\r\n    const buttonCloseFn: MouseEventHandler<HTMLButtonElement> = (e) => {\r\n        if (button?.eventHandler) button?.eventHandler(e);\r\n        handleClose(e, \"timeout\");\r\n    };\r\n\r\n\r\n    const action = button ?\r\n        <Button style={{ color: button.color ?? \"pink\", marginRight: \"auto\", marginLeft: -8, paddingRight: -16 }}\r\n            onClick={buttonCloseFn}>{button.text}</Button> : null\r\n    return <Snackbar dir=\"rtl\" open={open} message={message} action={action} onClose={handleClose} autoHideDuration={duration ?? 3000}\r\n        {...props} style={{ backgroundColor, color }}\r\n    />\r\n}\r\n\r\nconst SnackbarContext = React.createContext((props: ISnackbarProps) => { (() => props)(); });\r\n\r\nexport const useSnackbar = () => useContext(SnackbarContext);\r\n\r\nexport default function SnackbarContextProvider({ children }: { children?: ReactNode }) {\r\n    const [open, setOpen] = useState(false)\r\n    const [props, setProps] = useState<SnackbarProps | null>(null);\r\n\r\n    useEffect(() => props ? setOpen(true) : setOpen(false), [props])\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setProps(null);\r\n    }\r\n\r\n    return <SnackbarContext.Provider value={setProps}>\r\n        {children}\r\n        {props ? <MessageSnackBar key={+new Date()} {...props} open={open} onClose={handleClose} /> : null}\r\n    </SnackbarContext.Provider>\r\n\r\n}\r\n\r\n\r\n","import { setUser, setToken, setMoodleUrl } from '../actions/localStorageActions';\r\nimport { useGlobalStore } from '../stores/GlobalStore';\r\nimport { useSnackbar } from '../ContextProviders/SnackbarContext';\r\nimport { useCallback } from 'react';\r\nimport { useAlert } from '../ContextProviders/AlertContext';\r\nimport { Typography } from '@material-ui/core';\r\n\r\n\r\ntype ErrorCode = \"invalidtoken\" | \"invalidlogin\" | \"invalidtoolid\";\r\n\r\n\r\n\r\nconst useError = () => {\r\n\r\n    const openSnackbar = useSnackbar();\r\n    const openAlert = useAlert()\r\n    const [, dispatchGlobalStore] = useGlobalStore();\r\n\r\n    const onInvalidToken = useCallback(() => {\r\n        openAlert({\r\n            title: \"שגיאת חיבור\",\r\n            content: <Typography>טוקן החיבור לא תקין או פג תוקף, אנא התחבר/י מחדש.</Typography>, button: { text: \"התחברות\" }, onClose: () => {\r\n                setMoodleUrl(\"https://md.hit.ac.il\")(dispatchGlobalStore);\r\n                setUser(null)(dispatchGlobalStore);\r\n                setToken(null)(dispatchGlobalStore);\r\n            }\r\n        })\r\n    }, [openAlert, dispatchGlobalStore]);\r\n\r\n\r\n\r\n\r\n\r\n    const requestError = useCallback((errorcode?: ErrorCode) => {\r\n        switch (errorcode) {\r\n            case \"invalidtoken\":\r\n                onInvalidToken();\r\n                break;\r\n            case \"invalidtoolid\":\r\n                openSnackbar({ message: \"אחת או יותר מהפעילויות לא קיימות אז הן נמחקו\", button: { text: \"הבנתי\" }, persist: true, duration: 7000 });\r\n                break;\r\n            default:\r\n                openSnackbar({ message: \"אירעה שגיאה\" });\r\n        }\r\n    }, [onInvalidToken, openSnackbar]);\r\n\r\n    return { requestError };\r\n}\r\n\r\n\r\nexport default useError;","import React, { MouseEventHandler, useEffect, useState } from 'react';\r\nimport { Button, Paper, Checkbox, Container, Grid, IconButton, Link, TextField, Typography, CircularProgress } from '@material-ui/core';\r\nimport { Edit, Visibility, VisibilityOff } from '@material-ui/icons';\r\nimport useError from '../../hooks/useError';\r\nimport { Axios } from '../../config';\r\nimport { useGlobalStore } from '../../stores/GlobalStore';\r\nimport { fetchUser } from '../../utils/moodleRequests';\r\nimport { setMoodleUrl, setToken, setUser } from '../../actions/localStorageActions';\r\n\r\ninterface ILoginProps {\r\n    url: string;\r\n}\r\nexport default function Login({ url }: ILoginProps) {\r\n\r\n    const [passwordVisible, setPasswordVisible] = useState(false);\r\n    const [tosChecked, setTosChecked] = useState(false);\r\n    const [creds, setCreds] = useState({ username: \"\", password: \"\" });\r\n    const [loading, setLoading] = useState(false)\r\n    const [{ token, moodleUrl }, dispatchGlobalStore] = useGlobalStore();\r\n\r\n    const { requestError } = useError();\r\n\r\n    useEffect(() => {\r\n        if (token) fetchUser().then(user => setUser(user)(dispatchGlobalStore));\r\n    }, [dispatchGlobalStore, token])\r\n\r\n    const login: MouseEventHandler<HTMLButtonElement> = (e) => {\r\n        e.preventDefault();\r\n        setLoading(true);\r\n\r\n        Axios.post(`${url}/login/token.php`, `username=${creds.username}&password=${creds.password}&service=moodle_mobile_app`\r\n        ).then(({ data }) => {\r\n            if (data.errorcode || !data.token) {\r\n                requestError(data);\r\n            }\r\n            else setToken(data.token)(dispatchGlobalStore);\r\n        }).catch((e) => { requestError(e); }).finally(() => setLoading(false));\r\n    }\r\n\r\n    return <Container maxWidth=\"sm\" style={{ marginTop: 16 }}>\r\n        <form>\r\n            <Grid container spacing={2} direction=\"row-reverse\">\r\n                <Grid item xs={12}>\r\n                    <Typography variant=\"h5\">אנא התחבר/י למשתמש המודל שלך</Typography>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField fullWidth variant=\"filled\" label=\"ID\" name=\"username\" required\r\n                        onChange={(e) => setCreds({ ...creds, username: e.target.value })} />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    <TextField fullWidth variant=\"filled\" label=\"Password\" name=\"password\" type={passwordVisible ? 'text' : 'password'} required\r\n                        onChange={(e) => setCreds({ ...creds, password: e.target.value })}\r\n                        InputProps={{ endAdornment: <IconButton onClick={() => setPasswordVisible(!passwordVisible)}>{passwordVisible ? <Visibility /> : <VisibilityOff />}</IconButton> }}\r\n                    />\r\n                </Grid>\r\n                <Grid item xs={12} >\r\n                    <Paper variant=\"outlined\" style={{ paddingLeft: 8, paddingRight: 8 }}>\r\n                        <Grid container spacing={1} justify=\"space-between\" alignItems=\"center\" >\r\n                            <Grid item><IconButton color=\"primary\" onClick={() => setMoodleUrl(null)(dispatchGlobalStore)}><Edit /></IconButton></Grid>\r\n                            <Grid item><Typography variant=\"body1\" color=\"textSecondary\"><Link target=\"_blank\" href={moodleUrl as string}>{moodleUrl}</Link> :אתר המודל</Typography></Grid>\r\n                        </Grid>\r\n                    </Paper>\r\n                </Grid>\r\n                <Grid item container xs={12} direction=\"row-reverse\" alignItems=\"center\">\r\n                    <Typography variant=\"body2\">אני מאשר/ת את <Link target=\"_blank\" href=\"/license.txt\">תנאי השימוש</Link></Typography>\r\n                    <Checkbox checked={tosChecked} onClick={() => setTosChecked(!tosChecked)} />\r\n                </Grid>\r\n                <Grid item><Button type=\"submit\" variant=\"contained\" color=\"primary\" onClick={login}\r\n                    disabled={!tosChecked || loading} startIcon={loading ? <CircularProgress size={24} /> : null}>כניסה</Button></Grid>\r\n            </Grid>\r\n        </form>\r\n    </Container>\r\n}\r\n\r\n","import React, { useEffect } from 'react'\r\nimport { fetchUser } from '../../utils/moodleRequests';\r\nimport { useGlobalStore } from '../../stores/GlobalStore'\r\nimport AcademyUrl from './AcademyUrl';\r\nimport Login from './Login';\r\nimport { setUser } from '../../actions/localStorageActions';\r\n\r\n\r\n\r\nexport default function LoginPage() {\r\n\r\n    const [{ moodleUrl, token }, dispatchLocalStorage] = useGlobalStore();\r\n\r\n    useEffect(() => {\r\n        if (token)\r\n            fetchUser().then(user => setUser(user)(dispatchLocalStorage));\r\n    }, [dispatchLocalStorage, token])\r\n\r\n    return moodleUrl ? <Login url={moodleUrl} /> : <AcademyUrl />\r\n\r\n\r\n}","import { CircularProgress, List, ListItem, ListItemText } from '@material-ui/core';\r\nimport React, { useEffect, useState } from 'react'\r\nimport useError from '../../hooks/useError';\r\nimport { fetchCourses } from '../../utils/moodleRequests';\r\nimport { ICourseData } from '../../interfaces';\r\n\r\n\r\ninterface ISelectCourse {\r\n    onSelectCourse: (course: ICourseData) => void;\r\n}\r\n\r\nexport default function SelectCourse({ onSelectCourse }: ISelectCourse) {\r\n\r\n    const [courses, setCourses] = useState<ICourseData[]>([]);\r\n\r\n    const { requestError } = useError();\r\n\r\n    useEffect(() => {\r\n        if (!courses.length)\r\n            fetchCourses().then(courses => setCourses(courses)).catch(requestError)\r\n    }, [courses, requestError])\r\n\r\n    return courses.length ? <>\r\n        <List >\r\n            {courses.map((course,index) =>\r\n                <ListItem key={index} button onClick={() => onSelectCourse(course)}>\r\n                    <ListItemText style={{ textAlign: 'right' }}>{course.fullname}</ListItemText>\r\n                </ListItem>\r\n            )}\r\n        </List >\r\n    </> : <CircularProgress size={64} />\r\n}\r\n\r\n","import { CircularProgress, List, ListItem, ListItemText, Typography } from '@material-ui/core';\r\nimport React, { useCallback, useEffect, useState } from 'react'\r\nimport { setToolids } from '../../actions/localStorageActions';\r\nimport { useSnackbar } from '../../ContextProviders/SnackbarContext';\r\nimport useError from '../../hooks/useError';\r\nimport { ICourseData, LTI } from '../../interfaces';\r\nimport { useGlobalStore } from '../../stores/GlobalStore';\r\nimport { fetchLti, fetchToolids } from '../../utils/moodleRequests';\r\n\r\n\r\ninterface IActivityItemProps {\r\n    toolid: string;\r\n    onSelect: (lti: LTI) => void;\r\n\r\n}\r\n\r\nfunction ActivityItem({ toolid, onSelect }: IActivityItemProps) {\r\n\r\n    const [lti, setLti] = useState<LTI | null>(null)\r\n    const [ready, setReady] = useState(false)\r\n    useEffect(() => {\r\n        fetchLti(toolid).then(setLti).catch().finally(() => setReady(true));\r\n    }, [toolid])\r\n\r\n    return <ListItem button disabled={ready && !lti} onClick={() => lti ? onSelect(lti) : null} >\r\n        <ListItemText style={{ textAlign: \"right\" }} >\r\n            {ready ? lti ? lti.parameters.resource_link_title : \"פעילות לא קיימת\" : <CircularProgress />}\r\n        </ListItemText>\r\n    </ListItem>\r\n\r\n}\r\n\r\n\r\ninterface ActivityList {\r\n    course: ICourseData;\r\n    selectedToolids: string[];\r\n    onFinish: () => void;\r\n}\r\n\r\nfunction ActivitiesList({ onFinish, selectedToolids }: ActivityList) {\r\n\r\n    const [{ toolids }, dispatchGlobal] = useGlobalStore();\r\n\r\n\r\n    const openSnackbar = useSnackbar();\r\n\r\n\r\n    const handleSelect = useCallback((lti: LTI) => {\r\n        console.log(lti);\r\n        const toolid = lti.parameters.resource_link_id;\r\n        if (toolids?.includes(toolid)) {\r\n            return openSnackbar({ message: \"הפעילות כבר קיימת\", duration: 5000 }); // TODO: REASSIGN THIS ERROR HANDLING\r\n        }\r\n        setToolids([lti.parameters.resource_link_id, ...toolids ?? []])(dispatchGlobal);\r\n        onFinish();\r\n    }, [dispatchGlobal, onFinish, openSnackbar, toolids]);\r\n\r\n    return <List  >\r\n        {selectedToolids.length === 0 ? <Typography>לא נמצאו פעילויות בקורס</Typography> :\r\n            selectedToolids.map((toolid,index) => <ActivityItem key={index} toolid={toolid} onSelect={handleSelect} />)\r\n        }\r\n    </List >\r\n\r\n}\r\n\r\n\r\n\r\n\r\ninterface ISelectActivityProps {\r\n    selectedCourse: ICourseData | null;\r\n    onFinish: () => void;\r\n}\r\n\r\nexport default function SelectActivity({ onFinish, selectedCourse }: ISelectActivityProps) {\r\n\r\n    const [selectToolids, setSelectToolids] = useState<string[]>([]);\r\n    const { requestError } = useError();\r\n\r\n    useEffect(() => {\r\n        if (selectedCourse?.id)\r\n            fetchToolids(selectedCourse.id).then(setSelectToolids).catch(requestError);\r\n    }, [requestError, selectedCourse])\r\n\r\n    return <List >\r\n        {selectToolids && selectedCourse ?\r\n            <ActivitiesList course={selectedCourse} selectedToolids={selectToolids} onFinish={onFinish} />\r\n            :\r\n            <CircularProgress />\r\n        }\r\n    </List >\r\n\r\n}\r\n\r\n","import React, { useState } from 'react'\r\n\r\nimport { Button, Dialog, DialogActions, DialogContent, DialogProps, DialogTitle, Typography, useTheme } from '@material-ui/core'\r\nimport SelectCourse from './SelectCourse'\r\nimport SelectActivity from './SelectActivity'\r\nimport { ICourseData } from '../../interfaces'\r\n\r\n\r\ninterface IScanDialogProps extends DialogProps {\r\n    onClose: () => void;\r\n}\r\n\r\nconst ScanDialog = ({ onClose, ...props }: IScanDialogProps) => {\r\n\r\n    const [step, setStep] = useState(0)\r\n    const [title, setTitle] = useState(\"אנא בחר/י קורס\");\r\n    const [selectedCourse, setSelectedCourse] = useState<ICourseData | null>(null)\r\n    const theme = useTheme();\r\n\r\n    function cleanup() {\r\n        setTitle(\"אנא בחר/י קורס\")\r\n        setStep(0);\r\n        setSelectedCourse(null);\r\n    }\r\n\r\n    function handleSelectCourse(course: ICourseData) {\r\n        setSelectedCourse(course);\r\n        setStep(1);\r\n        setTitle(`אנא בחר/י פעילות בקורס ${course.fullname ?? \"\"}`)\r\n\r\n    }\r\n\r\n    const steps = [\r\n        <SelectCourse onSelectCourse={handleSelectCourse} />,\r\n        <SelectActivity selectedCourse={selectedCourse} onFinish={onClose} />,\r\n    ]\r\n\r\n\r\n\r\n    return <Dialog dir=\"rtl\" onExited={cleanup} maxWidth=\"md\" onClose={onClose}  {...props}>\r\n        <DialogTitle><Typography variant=\"h5\">{title}</Typography></DialogTitle>\r\n        <DialogContent style={{ maxWidth: theme.breakpoints.width(\"sm\") }}>\r\n            {steps[step]}\r\n        </DialogContent>\r\n        <DialogActions dir=\"rtl\">\r\n            <Button variant=\"outlined\" style={{ color: 'red' }} onClick={onClose} >ביטול</Button>\r\n        </DialogActions>\r\n    </ Dialog>\r\n}\r\n\r\nexport default ScanDialog;","import { CircularProgress, Divider, Grid, IconButton, List, ListItem, ListItemIcon, ListItemText, Typography } from '@material-ui/core'\r\nimport { Add, Delete } from '@material-ui/icons';\r\nimport React, { useCallback, useEffect, useMemo, useState } from 'react'\r\nimport { deleteToolid } from '../../actions/localStorageActions';\r\nimport useError from '../../hooks/useError';\r\nimport { LTI } from '../../interfaces';\r\nimport { useGlobalStore } from '../../stores/GlobalStore';\r\nimport { fetchLti } from '../../utils/moodleRequests';\r\n\r\n\r\n\r\ninterface IActivityCardProps {\r\n    toolid: string;\r\n    editMode: boolean;\r\n    onDelete: () => void;\r\n    onSelect: (lti: LTI) => void;\r\n}\r\nfunction ActivityCard({ toolid, editMode, onSelect, onDelete }: IActivityCardProps) {\r\n\r\n    const [lti, setLti] = useState<LTI | null>(null);\r\n\r\n    const { requestError } = useError();\r\n\r\n    const [, dispatchGlobalStore] = useGlobalStore();\r\n\r\n\r\n    const handleDelete = useCallback(() => {\r\n        deleteToolid(toolid)(dispatchGlobalStore)\r\n        onDelete();\r\n    }, [dispatchGlobalStore, onDelete, toolid]);\r\n\r\n    useEffect(() => {\r\n        fetchLti(toolid).then(setLti).catch(e => {\r\n            if (e?.errorcode === \"invalidtoken\") requestError('invalidtoken');\r\n            else requestError(\"invalidtoolid\");\r\n            handleDelete();\r\n        });\r\n\r\n    }, [handleDelete, requestError, toolid])\r\n\r\n    return <ListItem button>\r\n        {lti ?\r\n            <>\r\n                {editMode ? <ListItemIcon><IconButton onClick={handleDelete}><Delete /></IconButton></ListItemIcon> : null}\r\n                <ListItemText style={{ textAlign: 'right' }} onClick={() => onSelect(lti)}>\r\n                    <Typography variant=\"h6\">{lti.parameters.context_title}</Typography>\r\n                    <Typography variant=\"body2\">{lti.parameters.resource_link_title}</Typography>\r\n                </ListItemText>\r\n            </> :\r\n            <CircularProgress />\r\n        }\r\n    </ListItem >\r\n}\r\n\r\n\r\ninterface IActivityCardsProps {\r\n    editMode: boolean;\r\n    onFinishedEditing: () => void;\r\n    toolids: string[];\r\n    onSelectLti: (lti: LTI) => void;\r\n}\r\n\r\nexport default function ActivityCards({ editMode, onFinishedEditing, toolids, onSelectLti }: IActivityCardsProps) {\r\n\r\n    const cards = useMemo(() => {\r\n        return toolids.length !== 0 ? toolids.map((toolid, index) => <>\r\n            <ActivityCard key={toolid} toolid={toolid} editMode={editMode} onDelete={onFinishedEditing} onSelect={onSelectLti} />\r\n            {index < toolids.length - 1 ? <Divider /> : null}\r\n        </>) : <Grid container direction=\"row-reverse\" alignItems=\"center\">\r\n                <Grid item><Typography variant=\"h5\">רשימת הפעילויות ריקה, להוספה לחץ</Typography></Grid>\r\n                <Grid item><Add /></Grid>\r\n            </Grid>\r\n    }, [editMode, onFinishedEditing, onSelectLti, toolids])\r\n\r\n\r\n    return <List>{cards}</List>\r\n}","import React, { useEffect, useRef } from 'react'\r\nimport { LTI } from '../../interfaces'\r\n\r\ninterface IProps {\r\n    lti: LTI\r\n}\r\n\r\nexport default function ZoomFrame({ lti }: IProps) {\r\n    const iframeRef = useRef<HTMLIFrameElement>(null);\r\n    const formRef = useRef<HTMLFormElement>(null);\r\n    useEffect(() => {\r\n        formRef.current?.submit();\r\n    }, [lti]);\r\n\r\n    return <>\r\n        <iframe src=\"about:blank\" ref={iframeRef} name=\"zoomframe\" style={{ height: '100%' }} title={lti.parameters.context_title} />\r\n        <form style={{ display: 'none' }\r\n        } ref={formRef} target=\"zoomframe\" action={lti.endpoint} method=\"post\" encType=\"application/x-www-form-urlencoded\">\r\n            {Object.entries(lti.parameters).map(([name, value]) => <input key={name} name={name} value={value} />)}\r\n        </form>\r\n    </>\r\n}","import { AppBar, CircularProgress, Dialog, IconButton, Slide, Toolbar, Typography } from '@material-ui/core'\r\nimport { TransitionProps } from '@material-ui/core/transitions/transition'\r\nimport { Close } from '@material-ui/icons'\r\nimport React, { forwardRef } from 'react'\r\nimport { LTI } from '../../interfaces'\r\nimport ZoomFrame from './ZoomFrame'\r\n\r\n\r\n\r\n\r\nconst Transition = forwardRef(function Transition(props: TransitionProps, ref: React.Ref<unknown>) {\r\n    return <Slide direction=\"up\" ref={ref} {...props} />\r\n})\r\n\r\n\r\ninterface IZoomDialogProps {\r\n    open: boolean;\r\n    lti: LTI | null;\r\n    onCloseDialog: () => void;\r\n}\r\n\r\n\r\nexport default function ZoomDialog({ open, lti, onCloseDialog }: IZoomDialogProps): JSX.Element {\r\n\r\n    return <Dialog dir=\"rtl\" open={open} fullScreen TransitionComponent={Transition}>\r\n        {lti ?\r\n            <>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <IconButton edge=\"start\" color=\"inherit\" onClick={onCloseDialog} ><Close /></IconButton>\r\n                        <Typography variant=\"h6\">{lti.parameters.context_title}</Typography>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                <ZoomFrame lti={lti} />\r\n            </>\r\n            :\r\n            <CircularProgress />\r\n        }\r\n    </Dialog>\r\n\r\n}","import { Button, Container, Grid, Typography, useMediaQuery, useTheme } from '@material-ui/core'\r\nimport { Add } from '@material-ui/icons'\r\nimport React, { useState } from 'react'\r\nimport { LTI } from '../../interfaces'\r\nimport { useGlobalStore } from '../../stores/GlobalStore'\r\nimport ScanDialog from '../ScanDialog/'\r\nimport ActivityCards from './ActivityCards'\r\nimport ZoomDialog from './ZoomDialog'\r\n\r\nexport default function CoursesPage(): JSX.Element {\r\n\r\n    const [lti, setLti] = useState<LTI | null>(null);\r\n    const [editMode, setEditMode] = useState(false);\r\n    const theme = useTheme();\r\n    const scanDialogBreakpoint = useMediaQuery(theme.breakpoints.down(\"xs\"));\r\n    const [zoomDialogOpen, setZoomOpenDialog] = useState(false);\r\n    const [scanDialogOpen, setScanDialogOpen] = useState(false);\r\n\r\n\r\n    const [{ toolids }] = useGlobalStore();\r\n\r\n\r\n    function handleCloseZoomDialog() {\r\n        setZoomOpenDialog(false);\r\n    }\r\n\r\n    function handleSelectLti(lti: LTI) {\r\n        setZoomOpenDialog(true);\r\n        setLti(lti);\r\n    }\r\n\r\n    function handleOpenScanDialog() {\r\n        setEditMode(false);\r\n        setScanDialogOpen(true);\r\n    }\r\n\r\n    function handleCloseScanDialog() {\r\n        setScanDialogOpen(false);\r\n    }\r\n\r\n    return <>\r\n        <Container maxWidth=\"md\" style={{ marginTop: 16, height: \"100vh\" }}>\r\n            <Grid container direction=\"row\">\r\n                <Grid item container direction=\"row-reverse\" xs={12} spacing={2} alignItems=\"center\" justify=\"space-between\">\r\n                    <Grid item xs={12} sm={4}><Typography variant=\"h4\" style={{textAlign:scanDialogBreakpoint?\"center\":\"right\"}} >דף פעילויות</Typography></Grid>\r\n                    <Grid item xs={12} sm={8} container spacing={2}  >\r\n                        <Grid item><Button startIcon={<Add />} variant=\"contained\" color=\"secondary\" onClick={handleOpenScanDialog}>הוסף פעילות</Button></Grid>\r\n                        {toolids?.length ? <Grid item><Button color=\"default\" onClick={() => setEditMode(last => !last)}>{editMode ? \"בטל עריכה\" : \"עריכה\"}</Button></Grid> : null}\r\n                    </Grid>\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                    {toolids ? <ActivityCards editMode={editMode} onFinishedEditing={() => setEditMode(false)} toolids={toolids} onSelectLti={handleSelectLti} /> : null}\r\n                </Grid>\r\n            </Grid>\r\n        </Container>\r\n        <ZoomDialog open={zoomDialogOpen} lti={lti} onCloseDialog={handleCloseZoomDialog} />\r\n        <ScanDialog fullScreen={scanDialogBreakpoint} open={scanDialogOpen} onClose={handleCloseScanDialog}></ScanDialog>\r\n    </>\r\n}","import React, { ReactNode } from 'react'\r\nimport { Drawer, Link, List, ListItem, ListItemIcon, ListItemText, Typography } from '@material-ui/core'\r\nimport { Close, Info } from '@material-ui/icons'\r\nimport { useSnackbar } from '../../ContextProviders/SnackbarContext'\r\nimport { useGlobalStore } from '../../stores/GlobalStore'\r\nimport { clearLocalStorage } from '../../actions/localStorageActions'\r\nimport { useAlert } from '../../ContextProviders/AlertContext'\r\n\r\n\r\ninterface IDrawerListItemProps {\r\n    icon: ReactNode;\r\n    label: string;\r\n    onClick: () => void;\r\n}\r\nfunction DrawerListItem({ icon, label, onClick }: IDrawerListItemProps) {\r\n    return <ListItem button onClick={onClick}>\r\n        <ListItemIcon>{icon}</ListItemIcon>\r\n        <ListItemText primary={label} />\r\n    </ListItem>\r\n}\r\n\r\n\r\ninterface INavbarDrawerProps {\r\n    open: boolean;\r\n    onClose: () => void;\r\n}\r\n\r\nexport default function NavbarDrawer({ open, onClose }: INavbarDrawerProps) {\r\n\r\n    const [, dispatchLocalStorage] = useGlobalStore();\r\n    const openSnackbar = useSnackbar();\r\n    const openAlert = useAlert()\r\n\r\n    function invokeDialog() {\r\n        openAlert({\r\n            title: \"אודות\", \r\n            content:\r\n                <Typography>\r\n                    אתר זה הוא פרוייקט בשלבים ראשוניים כדי להקל על חיי הסטודנטים בעידן הזום והמודל.\r\n                        נבנה ע\"י גיא ציציאשוילי.<br />\r\n                    <Link target=\"_blank\" href=\"https://github.com/GuyGooL5/zoom-o-matic\">קישור לפרויקט בגיט</Link><br />\r\n                    <Link href=\"/license.txt\">תנאי השימוש</Link>\r\n                </Typography>,\r\n            button: { text: \"סגור\" }\r\n        })\r\n    }\r\n\r\n    function logout() {\r\n        clearLocalStorage()(dispatchLocalStorage);\r\n        openSnackbar({ message: \"התנתקת בהצלחה\", duration: 5000 });\r\n        onClose();\r\n    }\r\n\r\n    return <>\r\n        <Drawer anchor=\"left\" open={open} onClose={onClose} PaperProps={{ style: { width: 256 } }}>\r\n            <List>\r\n                <DrawerListItem icon={<Info />} label=\"אודות\" onClick={invokeDialog} />\r\n                <DrawerListItem icon={<Close />} label=\"התנתקות\" onClick={logout} />\r\n            </List>\r\n        </Drawer>\r\n    </>\r\n}","import React, { useState } from 'react'\r\nimport { AppBar, Toolbar, IconButton, Typography } from '@material-ui/core'\r\nimport { Menu } from '@material-ui/icons';\r\nimport NavbarDrawer from './NavbarDrawer';\r\nimport { useGlobalStore } from '../../stores/GlobalStore';\r\n\r\nexport default function Navbar() {\r\n\r\n    const [{ user }] = useGlobalStore();\r\n    const [open, setOpen] = useState(false);\r\n    return <>\r\n        <AppBar position=\"fixed\" >\r\n            <Toolbar>\r\n                <IconButton edge=\"start\" color=\"inherit\" aria-label=\"menu\" onClick={() => setOpen(true)}><Menu /></IconButton>\r\n                <Typography variant=\"h6\" style={{ flexGrow: 1 }}>Zoom-o-matic!</Typography>\r\n                {user?.fullname ? <Typography variant=\"body1\" style={{ marginRight: 16 }}>{`היי ${user.fullname}`}</Typography> : null}\r\n            </Toolbar>\r\n        </AppBar>\r\n        <Toolbar />\r\n        <NavbarDrawer open={open} onClose={() => setOpen(false)} />\r\n    </>\r\n}","import React from 'react'\r\nimport CoursesPage from '../CoursesPage';\r\nimport Navbar from './Navbar';\r\n\r\n\r\nexport default function Home(): JSX.Element {\r\n\r\n    return < >\r\n        <Navbar />\r\n        <CoursesPage />\r\n    </ >\r\n}","import React from 'react'\r\nimport { useGlobalStore } from '../../stores/GlobalStore';\r\nimport LoginPage from '../LoginPage';\r\nimport Home from './Home';\r\n\r\nexport default function HomePage() {\r\n\r\n    const [{ token, user }] = useGlobalStore();\r\n\r\n    return token && user ? <Home /> : <LoginPage />\r\n}","import React from 'react';\nimport HomePage from './components/HomePage';\nimport { GlobalStore } from './stores/GlobalStore';\nimport SnackbarContextProvider from './ContextProviders/SnackbarContext';\nimport AlertContextProvider from './ContextProviders/AlertContext';\n\nexport default function App() {\n  return (\n    <div className=\"App\" style={{ margin: 0, padding: 0 }}>\n      <GlobalStore>\n        <SnackbarContextProvider>\n          <AlertContextProvider>\n            <HomePage />\n          </AlertContextProvider>\n        </SnackbarContextProvider>\n      </GlobalStore>\n    </div>\n  );\n}","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}